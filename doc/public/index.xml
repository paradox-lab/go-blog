<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My New Hugo Site</title>
    <link>http://paradox-lab.github.io/</link>
    <description>Recent content on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="http://paradox-lab.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>http://paradox-lab.github.io/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://paradox-lab.github.io/docker/</guid>
      <description>Docker docker仓库 https://hub.docker.com/
参考书籍 Docker实践(第2版)
常见问题 容器互相访问 参考博客 https://www.cnblogs.com/shenh/p/9714547.html
server容器需要调用grpc容器服务以执行用户上传的代码，访问地址是&amp;quot;&amp;lt;容器名称&amp;gt;:&amp;lt;服务端口号&amp;gt;&amp;quot;。
在django admin pro项目中, 容器名称已在 docker-compose.yml 定义好
/server/helper/grpc/client.py
class BaeGrpcClient:  def __init__(self, address: str = settings.GRPC_ADDRESS):  self.address = address  ... /server/django_admin_pro/settings/prod.py
# grpc容器访问地址 GRPC_ADDRESS = &amp;#34;grpc:50051&amp;#34; 解决apt-get/pip下载很慢的问题 更换国内源，如果基于ubuntu的镜像
# syntax=docker/dockerfile:1FROMubuntu:20.04RUN sed -i s@/archive.ubuntu.com/@/mirrors.aliyun.com/@g /etc/apt/sources.list &amp;amp;&amp;amp; \  apt-get clean &amp;amp;&amp;amp; \  apt-get update &amp;amp;&amp;amp; \  apt-get upgrade -y &amp;amp;&amp;amp; \  apt-get install -y --no-install-recommends \  curl \  vim如果是python或者go</description>
    </item>
    
    <item>
      <title></title>
      <link>http://paradox-lab.github.io/golang/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://paradox-lab.github.io/golang/</guid>
      <description>Go 包管理 wiki https://github.com/golang/go/wiki/Modules
工程目录结构参考
go.mod go.sum repo\main.go  myPackage\myCode.go  util.go &amp;#39;package repo  util_test.go ::: tip 每个包最多只能存在一个main.go文件 :::
 初始化 go mod init github.com/my/repo 如果不放远程仓库，可以省略仓库地址
go mod init repo 自动增加模块依赖和sums
go mod tidy 引用自定义包 import &amp;#34;repo/repo/myPackage&amp;#34; go.mod go.mod文件的4个关键字
 module语句指定包的名字（路径） require语句指定的依赖项模块 replace语句可以替换依赖项模块 exclude语句可以忽略依赖项模块  引入自定义包(不在项目内)
项目A引入自定义包B
A项目的main.go
import &amp;#34;B/core/management&amp;#34; A项目的go.mod需要加入以下内容
require B v0.0.0  replace B =&amp;gt; E:\godjan\B ::: tip replace 改用相对路径也可以 :::
go命令行 go generate 使用go mod并安装go依赖包</description>
    </item>
    
  </channel>
</rss>
