<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Golang on Hugo 主题的 Learn 文档</title><link>http://coderzh.github.io/go-blog/zh/golang/</link><description>Recent content in Golang on Hugo 主题的 Learn 文档</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 24 May 2022 17:42:09 +0800</lastBuildDate><atom:link href="http://coderzh.github.io/go-blog/zh/golang/index.xml" rel="self" type="application/rss+xml"/><item><title>interface</title><link>http://coderzh.github.io/go-blog/zh/golang/interface/</link><pubDate>Fri, 17 Jun 2022 09:48:05 +0800</pubDate><guid>http://coderzh.github.io/go-blog/zh/golang/interface/</guid><description>接口 接口是一组仅包含方法名、参数、返回值的未具体实现的方法的集合。如果实现了接口的所有方法，则认为实现了该接口，无需在该类型上显示的添加声明。
应用场景
抽象。接口可以理解为某一个方面的抽象，可以是多对一的(多个类型实现一个接口)，这也是多态的体现。 duck typing。 开发阶段判断是否实现了接口 var _ Phone = new(AndroidPhone) // 等价于 var _ Phone = (*AndroidPhone)(nil)</description></item></channel></rss>