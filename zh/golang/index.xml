<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Golang on Hugo 主题的 Learn 文档</title><link>http://coderzh.github.io/go-blog/zh/golang/</link><description>Recent content in Golang on Hugo 主题的 Learn 文档</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 24 May 2022 17:42:09 +0800</lastBuildDate><atom:link href="http://coderzh.github.io/go-blog/zh/golang/index.xml" rel="self" type="application/rss+xml"/><item><title>dev</title><link>http://coderzh.github.io/go-blog/zh/golang/dev/</link><pubDate>Wed, 06 Jul 2022 15:20:55 +0800</pubDate><guid>http://coderzh.github.io/go-blog/zh/golang/dev/</guid><description>开发环境 Goland设置
设置后，外部库即可看到第三方包文件</description></item><item><title>Faq</title><link>http://coderzh.github.io/go-blog/zh/golang/faq/</link><pubDate>Fri, 17 Jun 2022 16:27:39 +0800</pubDate><guid>http://coderzh.github.io/go-blog/zh/golang/faq/</guid><description>常见问题 处理中文乱码 参见: https://studygolang.com/articles/8897
导入github.com/axgle/mahonia库
enc := mahonia.NewDecoder(&amp;#34;gbk&amp;#34;) goStr:= enc.ConvertString(robotgo.GetTitle()) fmt.Println(goStr) 注意: robot.GetTitle()返回C.GoString的值，遇到中文会显示乱码
如何永久阻塞程序 sig := make(chan os.Signal, 2) signal.Notify(sig, syscall.SIGTERM, syscall.SIGINT) &amp;lt;-sig http请求参数空格符转义 使用url.QueryEscape</description></item><item><title>Context</title><link>http://coderzh.github.io/go-blog/zh/golang/context/</link><pubDate>Fri, 17 Jun 2022 11:01:34 +0800</pubDate><guid>http://coderzh.github.io/go-blog/zh/golang/context/</guid><description>资料参考 https://zhuanlan.zhihu.com/p/68792989
资料参考2: https://www.5axxw.com/questions/content/hu6pqz
WithTimeout例程
func SayHello(name string) (string, error) { ctx, cancel := context.WithTimeout(context.Background(), 15 * time.Second) defer cancel() ch := make(chan string, 1) go func() { conn, err := NewGrpcConn() if err != nil { config.Logger.Fatalf(&amp;#34;did not connect: %v&amp;#34;, err) } defer conn.Close() c := NewGrpcClient(conn) r, err := c.SayHello(ctx, &amp;amp;HelloRequest{Name: name}) if err != nil { log.Fatalf(&amp;#34;could not greet: %v&amp;#34;, err) } if r.String() != &amp;#34;&amp;#34; { log.</description></item><item><title>interface</title><link>http://coderzh.github.io/go-blog/zh/golang/interface/</link><pubDate>Fri, 17 Jun 2022 09:48:05 +0800</pubDate><guid>http://coderzh.github.io/go-blog/zh/golang/interface/</guid><description>接口 接口是一组仅包含方法名、参数、返回值的未具体实现的方法的集合。如果实现了接口的所有方法，则认为实现了该接口，无需在该类型上显示的添加声明。
应用场景
抽象。接口可以理解为某一个方面的抽象，可以是多对一的(多个类型实现一个接口)，这也是多态的体现。 duck typing。 开发阶段判断是否实现了接口 var _ Phone = new(AndroidPhone) // 等价于 var _ Phone = (*AndroidPhone)(nil)</description></item></channel></rss>