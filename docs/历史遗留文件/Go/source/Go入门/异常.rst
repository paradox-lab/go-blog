*********************************
异常
*********************************

.. highlight:: go

panic
=================================

recover()可以让进入恐慌流程的Goroutine恢复过来并重新获得流程控制权。

需要注意的是，recover()让程序恢复，必须在延迟函数中执行。换言之，recover()仅在延迟函数中有效。

在正常的程序运行过程中，调用recover()会返回nil，并且没有其他任何效果。如果当前的Goroutine
陷入恐慌，调用recover()可以捕获panic()的输入值，使程序正常运行。

切记，开发者应该把它作为最后的手段来使用，换言之，开发者的代码中尽量少有或者没有panic异常。


返回自定义异常
=================================

第一种方法::

    return errors.New("自定义error")

第二种方法::

    return fmt.Errorf("%s", "error message")

推荐使用第一种
